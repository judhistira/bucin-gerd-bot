# GERD Meal Reminder Bot - Dokumentasi Teknis

## Deskripsi
Bot Discord yang mengingatkan penderita GERD untuk makan teratur dengan rekomendasi makanan berdasarkan cuaca dan waktu. Bot ini menggunakan Google Gemini API, OpenWeatherMap, dan di-deploy di Vercel. Penjadwalan ditangani oleh layanan cron job eksternal.

## Struktur Proyek
Proyek ini memiliki struktur modular untuk kemudahan pengelolaan:
- **`index.js`**: Entry point aplikasi. Menjalankan server Express dan menangani webhook.
- **`bot.js`**: Logika inti bot, memproses dan mengirim pesan.
- **`gemini.js`**: Mengelola interaksi dengan Google Gemini API.
- **`foods.js`**: Database makanan GERD-friendly.
- **`utils.js`**: Kumpulan fungsi utilitas.
- **`test-reminder.js`**: Script untuk testing pengiriman ke Discord.
- **`test-console.js`**: Script untuk testing output di console.
- **`.env`**: File konfigurasi environment lokal.
- **`.env.example`**: Template untuk file konfigurasi environment.
- **`package.json`**: Dependensi dan script.
- **`README.md`**: Dokumentasi utama.
- **`DOCUMENTATION.md`**: Dokumentasi teknis lengkap.
- **`vercel.json`**: Konfigurasi deployment untuk Vercel.

## Konfigurasi Environment Variables
- `DISCORD_TOKEN`: Token bot Discord
- `GEMINI_API_KEY`: API key Google Gemini
- `OPENWEATHER_API_KEY`: API key OpenWeatherMap
- `CHANNEL_ID`: ID channel Discord tujuan
- `LOCATION`: Lokasi untuk data cuaca (default: "Jatibarang, ID")

## Cara Kerja
1.  Layanan cron job eksternal memanggil endpoint webhook (`/gerd-reminder`) di `index.js`.
2.  `index.js` menerima panggilan dan memicu `sendMealReminder` dari `bot.js`.
3.  `bot.js` menjalankan logika utama:
    a.  Menggunakan `getTimeInfo` dari `utils.js` untuk menentukan waktu.
    b.  Memanggil `getWeatherData` untuk mendapatkan data cuaca.
    c.  Memanggil `getRandomFoodRecommendation` dari `gemini.js` untuk mendapatkan rekomendasi makanan dari database.
    d.  Memanggil `generateFinalMessage` dari `gemini.js` untuk membuat pesan akhir (termasuk pesan penyemangat).
    e.  Memecah pesan jika melebihi 2000 karakter menggunakan `splitMessageIntoChunks` dari `utils.js`.
    f.  Mengirim pesan ke channel Discord.
4.  `gemini.js` berisi semua detail prompt yang dikirim ke Google Gemini API dan fungsi untuk memformat pesan.

## Database Makanan
Bot menggunakan database makanan yang berisi:
- 20 makanan berbasis nasi untuk setiap waktu makan (pagi, siang, malam)
- 20 makanan non-nasi untuk setiap waktu makan (pagi, siang, malam)
- Setiap rekomendasi dipilih secara acak dari database ini
- Semua makanan umum dimakan orang Indonesia, terjangkau, mudah didapat, dan ramah GERD

## Optimasi Penggunaan API
Untuk menghemat penggunaan API Google Gemini, bot kini menggabungkan:
- Pembuatan pesan penyemangat
- Pembuatan pesan akhir

Dalam satu panggilan API, yang membuat bot lebih efisien dan mengurangi biaya penggunaan API.

## Pemecahan Pesan Panjang
Bot dapat memecah pesan yang melebihi 2000 karakter (batas maksimal pesan Discord) menjadi beberapa bagian:
- Memecah pesan berdasarkan paragraf terlebih dahulu
- Jika paragraf terlalu panjang, memecah berdasarkan kalimat
- Menambahkan jeda kecil antar pesan untuk menghindari rate limiting
- Menampilkan pesan sebagai serangkaian pesan terpisah di Discord

## Testing
- **Tes Pengiriman ke Discord**: `npm run test-reminder`
- **Tes Output di Console**: `npm run test:console`

## Deployment
### Lokal (untuk development):
- Gunakan `npm run test-reminder` untuk menjalankan tes pengiriman pesan secara manual.
- Gunakan `npm run test:console` untuk melihat output di console tanpa koneksi ke Discord.

### Vercel (untuk produksi):
- Cukup lakukan `git push` ke repositori yang terhubung dengan Vercel.
- Vercel akan secara otomatis men-deploy bot.
- Pastikan semua Environment Variables sudah diatur di dashboard Vercel.
- Atur layanan cron job eksternal untuk memanggil URL webhook Anda.

## Catatan Penting
- Penjadwalan sepenuhnya diatur oleh layanan cron job eksternal.
- File `vercel.json` tidak lagi berisi konfigurasi `crons`.

## Gaya Bahasa Bot
Bot ini dirancang dengan kepribadian "bucin" (budak cinta) yang bertujuan untuk membuat penerima merasa sangat dicintai dan diperhatikan:
- **Super Bucin & Manja**: Bahasa yang digunakan sangat memuja, manja, dan menunjukkan rasa cinta yang mendalam.
- **Posesif Ringan & Menggemaskan**: Menunjukkan kecemburuan yang lucu terhadap hal-hal yang bisa mengganggu kesehatan pasangan, menekankan betapa pentingnya mereka.
- **Jago Gombal & Puitis**: Sering menyisipkan rayuan, gombalan maut, atau pantun cinta untuk membuat pesan lebih romantis.
- **Sangat Perhatian & Detail**: Fokus pada detail kecil tentang kesehatan dan keseharian pasangan.
- **Ekspresif & Ceria**: Penuh dengan emoji cinta (❤️, 💕, 🥰), bunga (🌸, 🌹), dan ekspresi kasih sayang lainnya untuk menciptakan suasana yang hangat dan ceria.

## Klasifikasi Cuaca
- Menggunakan suhu rata-rata Indonesia sebagai acuan
- Cuaca dianggap "panas" jika suhu saat ini 2°C atau lebih di atas suhu rata-rata untuk fase waktu tersebut
- Suhu rata-rata: Pagi (26°C), Siang (30°C), Malam (27°C)
- Rekomendasi makanan disesuaikan dengan kondisi cuaca (panas/tidak panas)
